<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.mapper-seeker">

	<select id="getProjectList" resultType="com.lx.odw.vo.ProjectVO"
		parameterType="com.lx.odw.model.FilterModel">
		select distinct
		p.project_number,
		p.project_name,
		p.offer_id,
		p.project_start_date,
		p.project_end_date,
		ST_X(p.project_location) as
		project_lng,
		ST_Y(p.project_location) as
		project_lat,
		p.project_comment,
		p.project_subject,
		p.project_enroll_date,
		p.work_start_time,
		p.work_end_time
		from
		project p, job j
		where
		j.job_pay between ${minJobPay} and ${maxJobPay}
		and p.project_number = j.project_number
		and ST_Distance(ST_GeomFromText('POINT(${myLng} ${myLat})'), p.project_location) <![CDATA[ < ]]> ${maxDistance}
	<if test="projectSubjectFilter!='없음'">
		and p.project_subject = #{projectSubjectFilter}
	</if>
	<if test="jobNameFilter!='없음'">
		and j.job_name = #{jobNameFilter}
	</if>
	<if test="targetDateFilter!='없음'">
		and #{targetDateFilter} <![CDATA[ > ]]> j.job_start_date and #{targetDateFilter} <![CDATA[ < ]]> j.job_end_date
	</if>
	<if test="targetDateFilter!='없음'">
	
	</if>	
	<!-- TODO 필터 모델을 이용해서 필터링 하자 -->
</select>
<select id="requestProjectJobListByProjectNumber" parameterType="com.lx.odw.vo.ProjectVO" resultType="com.lx.odw.vo.JobVO">
	select
		job_number,
		project_number,
		job_pay,
		job_name,
		job_start_date,
		job_end_date,
		job_requirement,
		job_limit_count
	from
		job
	where
		project_number = #{projectNumber}
	</select>

<select id="requestProjectDetail" parameterType="com.lx.odw.vo.ProjectVO" resultType="com.lx.odw.vo.ProjectVO">
	select
		project_number,
		project_name,
		offer_id,
		project_start_date,
		project_end_date,
		ST_X(project_location) as
		project_lng,
		ST_Y(project_location) as
		project_lat,
		project_comment,
		project_subject,
		project_enroll_date,
		work_start_time,
		work_end_time
	from
		project
	where
		project_number = #{projectNumber}
</select>

<select id="requestJobDetail" parameterType="com.lx.odw.vo.JobVO" resultType="com.lx.odw.vo.JobVO">
	select
		job_number,
		project_number,
		job_pay,
		job_name,
		job_start_date,
		job_end_date,
		job_requirement,
		job_limit_count
	from
		job
	where
		job_number = #{jobNumber}
</select>
<select id="requestTargetDateCount" parameterType="com.lx.odw.vo.JobCandidateVO" resultType="int">
	select
		count(*)
	from
		job_candidate
	where
		candidate_status = 1 
		and	job_number = #{jobNumber} and
		target_date =
		Date(#{targetDate})
</select>

<select id="checkAnotherAccepted" parameterType="com.lx.odw.vo.JobCandidateVO" resultType="int">
	select
		count(*)
	from
		job_candidate
	where
		candidate_status = 1 and
		seeker_id = #{seekerId} and
		target_date = Date(#{targetDate})
</select>

<select id="checkDuplicateCandidate" parameterType="com.lx.odw.vo.JobCandidateVO" resultType="int">
	select
		count(*)
	from
		job_candidate
	where
		seeker_id = #{seekerId} and
		job_number = #{jobNumber} and
		target_date = Date(#{targetDate})
</select>
<select id="checkDuplicateAcceptCandidate" parameterType="com.lx.odw.vo.JobCandidateVO" resultType="int">
	select
		count(*)
	from
		job_candidate
	where
		seeker_id = #{seekerId} and
		job_number = #{jobNumber} and
		candidate_status = 1 and
		target_date = Date(#{targetDate})
</select>
<select id="requestDisableDaysByJobNumber" parameterType="int" resultType="com.lx.odw.vo.JobCandidateVO">
	select 
		x.target_date 
	from
		job b, (
			select
				job_number, target_date, count(*) cnt
			from
				job_candidate
			group by
				job_number, target_date
		) x
	where
		 x.job_number = b.job_number
		 and b.job_number = #{jobNumber}
		 and x.cnt = b.job_limit_count
</select>
<select id="managejobList" parameterType="com.lx.odw.vo.ManageVO" resultType="com.lx.odw.vo.ManageVO">
	select 
		distinct
		p.project_number,
		ST_X(p.project_location) as project_lng,
		ST_Y(p.project_location) as project_lat,
		p.project_name,
		p.project_start_date,
		p.project_end_date,
		p.project_comment,
		p.project_subject,
		p.project_enroll_date,
		p.work_start_time,
		p.work_end_time,
		j.job_number,
		j.job_pay,
		j.job_limit_count,
		j.job_name,
		c.target_date,
		c.candidate_number,
		c.seeker_id,
		c.candidate_status		
	from 
		project p,
		job j,
		job_candidate c
	where 
		p.project_number = j.project_number and
		j.job_number = c.job_number and	
		c.seeker_id = #{seekerId} and
		c.target_date = #{targetDate}and 
		c.candidate_status 
		in (select c.candidate_status 
			from job_candidate c
			where c.candidate_status = 0 
				or c.candidate_status = 1
				or c.candidate_status = 7)
</select>
<!-- <select id="ManageJobList" resultType="com.lx.odw.vo.JobVO"> -->
	<!-- select * --> 
	<!-- from  job --> 
	<!-- 윤정민 진행중.... join 해야함 -->
<!-- </select>--> 
<insert id="candidateJob" parameterType="com.lx.odw.vo.JobCandidateVO">
	insert
		into job_candidate
			(seeker_id,job_number,target_date,candidate_status)
		values
			(#{seekerId}, #{jobNumber}, #{targetDate}, #{candidateStatus})
</insert>

<update id="cancelProject" parameterType="com.lx.odw.vo.ManageVO">

<!-- update job 할때 candidate로 하면 요청이 0으로 와서 신청 취소가 안됨 .... join을 걸어서 프로젝트 id도 같이 받아야하나?
아니면 보낼때 candidate number 자체를 보낼 방법 -->
update job_candidate
set candidate_status = 7
where 
	candidate_number = #{candidateNumber}; 
</update>
<select id="requestManageProjectDetail" parameterType="com.lx.odw.vo.ManageVO" resultType="com.lx.odw.vo.ManageVO">
	select
		j.job_number,
		p.project_number,
		j.job_pay,
		j.job_name,
		j.job_start_date,
		j.job_end_date,
		j.job_requirement,
		ST_X(p.project_location) as project_lng,
		ST_Y(p.project_location) as project_lat,
		p.project_name,
		c.target_date,
		p.project_comment,
		p.project_subject
	from 
		project p,
		job j,
		job_candidate c
	where 
		p.project_number = j.project_number and
		j.job_number = c.job_number and
		candidate_number = #{candidateNumber}
</select>

<select id="requestSeekerDetail" parameterType="com.lx.odw.vo.SeekerVO" resultType="com.lx.odw.vo.SeekerVO">
	select
		seeker_id,
		seeker_name,
		seeker_email,
		seeker_account,
		bank,
		seeker_birth,
		seeker_cash,
		seeker_sex,
		seeker_info,
		ST_X(seeker_pinaddress) as seeker_longitude,
		ST_Y(seeker_pinaddress) as seeker_latitude,
		seeker_picture
	from 
		seeker
	where
		seeker_id = #{seekerId}
</select>
<select id="requestSeekerCertificationDetail" parameterType="com.lx.odw.vo.SeekerVO" resultType="com.lx.odw.controller.CertificateVO">
	select 
		s.seeker_id,
		s.seeker_certificate_index,
		s.seeker_certificate_number,
		c.certificate_id,
		c.certificate_name
	from
		certificate c, seeker_certificate s
	where
		c.certificate_id = s.certificate_id and
		s.seeker_id = #{seekerId}
</select>
<update id="updateSeeker" parameterType="com.lx.odw.vo.SeekerVO">
	update
		seeker
	set
		seeker_account = #{seekerAccount},
		seeker_info = #{seekerInfo},
		seeker_pinaddress = ST_GeomFromText('POINT(${seekerLongitude} ${seekerLatitude})'),
		bank = #{bank},
		seeker_picture = #{seekerPicture}
	where
		seeker_id = #{seekerId}
</update>
<select id="requestTodayWorkDetail" parameterType="String" resultType="com.lx.odw.vo.WorkVO">
	select
		p.project_name,
		p.project_subject,
		p.project_comment,
		ST_X(p.project_location) as project_longitude,
		ST_Y(p.project_location) as project_latitude,
		j.job_pay,
		j.job_name,
		c.candidate_status,
		c.candidate_number
	from
		project p,
		job j,
		job_candidate c
	where
		p.project_number = j.project_number and
		j.job_number = c.job_number and
		c.seeker_id = #{seekerId} and
		c.target_date = curdate() and
		c.candidate_status != 0 and
		c.candidate_status != 7
</select>
<update id="requestCommute" parameterType="String">
	update
		job_candidate
	set
		candidate_status = 2
	where
		seeker_id = #{seekerId} and
		target_date = curdate() and
		candidate_status = 1
</update>
<select id="requestCandidateDateList" parameterType="com.lx.odw.vo.JobCandidateVO" resultType="com.lx.odw.vo.JobCandidateVO">
	select distinct
		target_date
	from
		job_candidate
	where
		seeker_id = #{seekerId} and
		candidate_status 
		in (select candidate_status 
			from job_candidate 
			where candidate_status = 0 
				or candidate_status = 1
				or candidate_status = 7)
	order by
		target_date asc
</select>
<update id="updateCandidateSign" parameterType="com.lx.odw.vo.WorkVO">
	update
		job_candidate
	set
		seeker_sign = #{seekerSign}
	where
		seeker_id = #{jobName} and
		candidate_number = #{candidateNumber}
</update>
</mapper>